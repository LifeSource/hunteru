!function(){"use strict";angular.module("app",["app.core","app.common","app.hunter","app.layout"])}(),function(){"use strict";angular.module("app.common",[])}(),function(){"use strict";angular.module("app.core",["ui.router","ngResource","ngAnimate"])}(),function(){"use strict";angular.module("app.hunter",["app.core"])}(),function(){"use strict";angular.module("app.layout",[])}(),function(){"use strict";function t(t){function e(){return t.get("/api/nenTypes").then(a)["catch"](r)}function n(){return t.get("/api/occupations").then(a)["catch"](r)}function a(t){return t.data}function r(t){toastr.error(t)}var l={getNenTypes:e,getOccupations:n};return l}angular.module("app.core").factory("dataService",t),t.$inject=["$http"]}(),function(){"use strict";function t(t){function e(e){return t.get(o+e).then(function(t){return t.data})}function n(){return t.get(o).then(function(t){return t.data})["catch"](a)}function a(t){console.error("Failed to retrieve hunters from server.",t)}function r(e){return t.post(o,e).then(function(t){return t.status})}function l(t,e){}function i(t){}var o="/api/hunters/",s={post:r,get:e,query:n,update:l,remove:i};return s}angular.module("app.hunter").factory("hunterService",["$http",t])}(),function(){"use strict";function t(t){t.options.timeOut=3e3,t.options.positionClass="toast-bottom-right"}angular.module("app.core").config(t),t.$inject=["toastr"]}(),function(){"use strict";angular.module("app.core").constant("toastr",toastr)}(),function(){"use strict";function t(t,e){e.otherwise("/"),t.state("home",{url:"/",templateUrl:"app/hunter/hunterListView.html",controller:"HunterListController",controllerAs:"vm"}).state("hunterList",{url:"/hunterList",templateUrl:"app/hunter/hunterListView.html",controller:"HunterListController",controllerAs:"vm"}).state("newHunter",{url:"/hunters/new",templateUrl:"app/hunter/hunterEdit.html",controller:"HunterEditController",controllerAs:"vm"}).state("info",{url:"/hunters/:hunterId",templateUrl:"app/hunter/hunterInfoView.html",controller:"HunterInfoController as vm",resolve:{hunterService:"hunterService",hunter:["hunterService","$stateParams",function(t,e){var n=e.hunterId;return t.get(n)}]}})}angular.module("app.core").config(t),t.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function t(){}angular.module("app.hunter").controller("HunterCardController",[t])}(),function(){"use strict";function t(){var t={restrict:"AE",templateUrl:"app/hunter/hunterCard.template.html"};return t}angular.module("app.hunter").directive("htrHunterCard",t),t.$inject=[]}(),function(){"use strict";function t(t,e,n,a,r){function l(){var e=[i(),o()];t.all(e).then(function(){toastr.info("Hunter Edit View activated")})}function i(){return a.getNenTypes().then(function(t){return d.nenTypes=t,d.nenTypes})}function o(){return a.getOccupations().then(function(t){return d.occupations=t,d.occupations})}function s(t){t?r.post("/api/hunters/",d.hunter).then(function(){toastr.success("Data submitted successfully!")}):toastr.error("The form contains invalid data. Please correct the data and try again.")}function u(){d.hunter={}}function c(){e.go("home")}var d=this;d.title="New",d.hunter={},d.cancel=c,d.clear=u,d.submit=s,l()}angular.module("app.hunter").controller("HunterEditController",t),t.$inject=["$q","$state","$stateParams","dataService","hunterService"]}(),function(){"use strict";function t(t,e,n){function a(){var e=[r()];t.all(e).then(function(){toastr.info("Hunter info view activated")})}function r(){return e.getNenTypes().then(function(t){return l.nenTypes=t,l.nenTypes})}var l=this;l.nenTypes=[],l.hunter=n,a()}angular.module("app.hunter").controller("HunterInfoController",t),t.$inject=["$q","dataService","hunter"]}(),function(){"use strict";function t(t,e){function n(t){r.hunters=t}function a(t){e.error("Failed to retrieve hunters. ",t)}var r=this;r.hunters=[],t.query().then(n)["catch"](a)}angular.module("app.hunter").controller("HunterListController",t),t.$inject=["hunterService","toastr"]}(),function(){"use strict";function t(){var t={restrict:"AE",scope:{label:"@",icon:"@"},templateUrl:"app/layout/htrMenuItem.html"};return t}angular.module("app.layout").directive("htrMenuItem",t),t.$inject=[]}(),function(){"use strict";function t(){var t=this;t.menuItems=[{label:"Home",icon:"fa-home"},{label:"About",icon:"fa-fax"}]}angular.module("app.layout").controller("SideBarController",[t])}(),function(){"use strict";function t(){var t=this;t.navLinks=[{label:"Hunter List",state:"newHunter",icon:"fa-plus"},{label:"Add",state:"newHunter",icon:"fa-plus"},{label:"About",state:"newHunter",icon:"fa-plus"}]}angular.module("app.layout").controller("TopNavigationController",t),t.$inject=[]}(),angular.module("app.core").run(["$templateCache",function(t){t.put("app/hunter/hunterCard.template.html",'<div><img ng-src="/images/thumbnail/{{ hunter.name.first }}.png"> <span>{{ hunter.name.first }} {{ hunter.name.last }}</span></div>'),t.put("app/hunter/hunterEdit.html",'<div class=container><div class=col-md-12><div class="panel panel-default"><div class=panel-heading>{{ vm.title }}</div><div class=panel-body><form novalidate name=hunterEdit class=form-horizontal><div class=form-group data-ng-class="{ \'has-error\' : hunterEdit.firstName.$invalid && hunterEdit.firstName.$dirty }"><label for=firstName class="col-md-3 control-label">First Name:</label><div class=col-md-6><input data-ng-model=vm.hunter.firstName required name=firstName type=text class=form-control placeholder="First name (required)"></div><span class="help-block has-error" data-ng-show="hunterEdit.firstName.$invalid && hunterEdit.firstName.$dirty">First name is required.</span></div><div class=form-group><label for=lastName class="col-md-3 control-label">Last Name:</label><div class=col-md-6><input data-ng-model=vm.hunter.lastName name=lastName type=text class=form-control placeholder="Last name"></div></div><div class=form-group><label for=age class="col-md-3 control-label">Age:</label><div class=col-md-3><input data-ng-model=vm.hunter.age name=age type=number step=1 min=1 class=form-control placeholder=age></div></div><div class=form-group><label for=gender class="col-md-3 control-label">Gender:</label><div class=col-md-6><label for=male class=checkbox-inline><input data-ng-model=vm.hunter.gender type=radio name=male value=male> Male</label> <label for=female class=checkbox-inline><input data-ng-model=vm.hunter.gender type=radio name=female value=female "> Female</label></div></div><div class=form-group><label for=nenType class="col-md-3 control-label">Nen Type:</label><div class=col-md-6><select name=nenType id=nen class=form-control data-ng-model=vm.hunter.nenType data-ng-options="nen for nen in vm.nenTypes"><option value>Please select...</option></select></div></div><div class=form-group><label for=occupation class="col-md-3 control-label">Occupation:</label><div class=col-md-6><select name=occupation id=nen class=form-control data-ng-model=vm.hunter.occupation data-ng-options="occ.name for occ in vm.occupations"><option value>Please select...</option></select></div></div></form></div><div class=panel-footer><button class="btn btn-success pull-right" data-ng-click=vm.submit(hunterEdit.$valid)>Save</button> <button class="btn btn-default" data-ng-click=vm.cancel()><i class="fa fa-chevron-left"></i> Cancel</button> <button class="btn btn-default" data-ng-click=vm.clear()>Clear</button></div></div></div><div class=col-md-6><div class="panel panel-default"><div class=panel-heading>Hunter Data - JSON</div><div class=panel-body><pre>{{ vm.hunter | json }}</pre></div></div></div><div class=row><pre>\n			{{ hunterEdit | json }}\n		</pre></div></div>'),t.put("app/hunter/hunterInfoView.html",'<div class=container><div class="panel panel-primary"><div class=panel-heading>{{ vm.hunter.name.first }} {{ vm.hunter.name.last }}</div><div class=panel-body><div class=row><div class=col-md-3><img data-ng-src="images/thumbnail/{{ vm.hunter.name.first }}.png" alt><div><strong>Name:</strong> <span>{{ vm.hunter.name.first }} {{ vm.hunter.name.last }}</span><br><strong>Aage:</strong> <span>{{ vm.hunter.age }}</span><br><strong>Gender:</strong> <span>{{ vm.hunter.gender }}</span><br><strong>Occupation:</strong> <span>{{ vm.hunter.occupation[0] }}</span></div></div><div class=col-md-5><h4 class=sub-heading>Background</h4><br><p>{{ vm.hunter.bio }}</p></div><div class=col-md-4><h4 class=sub-heading>Abilities</h4><br><ul class=htr-abilities><li data-ng-repeat="ab in vm.hunter.abilities">{{ ab }}</li></ul></div></div><div class="row col-md-offset-1"><div class=htr-nen-type><ul class=htr-nen-list><li data-ng-repeat="nen in vm.nenTypes"><p class=htr-nen>{{ nen }}</p></li></ul></div></div></div></div></div>'),t.put("app/hunter/hunterListView.html",'<div class=container><div class=row><form class=form-inline><div class=form-group><div class=col-md-6></div></div></form></div></div><ul class=htr-hunter-list><li class=htr-hunter-card ng-repeat="hunter in vm.hunters"><a data-ui-sref="info({ hunterId: hunter._id })"><htr-hunter-card></htr-hunter-card></a></li></ul>'),t.put("app/layout/htrMenuItem.html",'<div class=htr-menu-item><i class="fa {{ icon }} htr-menu-icon"></i> <span>{{ label }}</span></div>'),t.put("app/layout/sidebar.html",'<div data-ng-controller="SideBarController as vm"><ul><li data-ng-repeat="item in vm.menuItems"><htr-menu-item label={{item.label}} icon="{{ item.icon }}"></htr-menu-item></li></ul></div>'),t.put("app/layout/topnav.html",'<nav class=htr-top-nav><div data-ng-controller="TopNavigationController as vm"><h1 class=htr-main-heading><a data-ui-sref=home>Hunteru</a></h1><ul class=htr-nav-list><li data-ng-repeat="item in vm.navLinks"><a data-ui-sref="{{ item.state }}">{{ item.label }}</a></li></ul></div></nav>')}]);